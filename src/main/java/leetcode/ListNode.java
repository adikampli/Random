package leetcode;

import java.util.HashMap;
import java.util.Map;

public class ListNode {
    int val;
    ListNode next;

    public ListNode(int val, ListNode next) {
        this.val = val;
        this.next = next;
    }

    public ListNode(int val) {
        this.val = val;
    }

    ListNode() {
    }

    public static void main(String[] args) {
        String s = "dddabadacbdbbabbaeccaedceaedacceebdedadacbeeceacedbcbccdcdadcdeeaadaeadcbacbaacacadcabbcaabebcecdaebecbdbcdbbebaaaacaacdbdcbaabccdeedceeedeaacbecccadaadacaaccbdaaaeaeceaeecdeddeccdeadeadddbadbbbacdbdcbcaeaaacecaadacddcadebeddacccecaccedeabacbabdbaacddcbbbdeecadebdebcaecbcbdeedbdaceebcacbcaaebbdecaeadeadeeccedcbcebaeabbbbeaeaaaeeedabcdaecceddeccdbcdddcbccadaaaddcdcbddbeaadcdadedeeccadbaecbcbebcceadaabcdcadabbcbbbcbaeadacbabdadbddbedcecebbccbcbcabcdcbecaaaaededaedbdebadaebacaeabbebbbaccbacedccbbbecbbbadbaebabbcbeaccbceecbeeaacbbbddcccccadedecceadccddccdbcdebaaeabeeeccaebcbecdeecbddeeacecaacccebdcddeaebabbeaaaaceaeeecbabedacbacaccdbbccddebaaecbaddeacecdabdabaecaadecbcdbbeecccbdcbbaaaaadaaeddaebeacdaadaeaaeaceadbbbedaeecaceaebbeeddebbacbcbabdcebdbcebcbedbebeaacebacdbaedbaeeadacccaadadcacaecaebbbbecddbcacdcadcbdaaaadebcdedcdaeddecaaedccaaabbbeabdbedbccdcbecbbdbddbabdadbeedeaeeaeccdeaadeebeececaedebdbdedbabbcabecebdedeeabebabbebaebbdaeaedcbeebacaccdcdcecedceccabebdddbddcabcdbccbbdadebcdaadeacbacceacdadacdceecceebdcbeccebcaebdbdcebaecbdccdaecaaecdabcbddeccdcbccbecacceccbdbcabbacaaecdaeccedacbbcddadacbecbcecdcdacdbbcbbdcbddadcbabadbdbbbaaabcedadaedcddadaadcaeebcacdbebecbbacbbccaeaebcabcdedbabbbbdeeecbbaabcaddaebbedaadeacacdbbaabaaaeedadeaebeaddaaddadebdadabdbdaacddceeabddbcdecaaebaadbcacaddadbeeabdacdaeadacacbddcabeaebaadebcceacdeeaddcbaeecacabcbceddccececebebbbadeececadcceeeebddeeecadadbaadebcccebacccabbcceadaaaedeaebeecbadbeccecdbbbdeaccdddbeaddbabeebcddabcccdaabdabcdbbcbaadecccadbaecdcbbbecbdeddacabcadaebadeddbbdcaabbeaebcacbeabcbebbacddeadaeaceaabbdbebaccbadddddceaddbbeadbeaecebadadaadaddbedabdcbcaedbcedecccdaddbaacdacebaadeaaeabcbccccadbeaaebaecbabdeadcebeaadbdccabecaabceecabeedbcccedcdeeeeeccdedbeebabbeccbcadedceaedaceddacabaadbcaaeaccaadaddcaebaaebedceaabbcbcebbbcccddcabeacdaebacdbebcececbbadaeeeacaadedaacaceedbabcedcadcaaadeccaadcaecebcdbdaeacedcacbdedaeddaacdbaabebcccabaddebeaaceaaccabaecbbccddabeabadedbdadcbdeeddebdadccadbaaadccadecbedeadddcdcaebaaacdecbedcbeeebeabddacdcdedcceabaedecdccaeeebdacccabebbaaeeeaaccbccbecdeaabeeccceddcbabedcaaacbdebeeeadaceabdcddeaaaddddddeebaedecdbcedaadbbdbeedceaabcdbdbeaadeebbedbaacdbbcdebbedcdcebdaacbccedeebacbaaaecebddddabcecbeddadebaddecebccebaaececeddccbbdeecbacdcbcdcecbadbecaaeeccececbeddbebcaaddccbacacdaeaedcbadadbdbedebacdeddbadaeebeccbecbdebbddecddcaaacbddbbaddaaeeedeeddedbadcbddacbccdaeedaeeabcbabeedecbcbeaadeaaedeacbaaaecddcecbceeeddedddedbbeebcbececdacbceaaeabbaaddcbeaecacacbbccdaecbbabdcbdbdadebcbaeecebedaacebcbccabcabbbaedeaecddbbcdbbdebebbdaddcdbdcebdbcbdaabaaccbeadbdbbeaadccccbbccdebadbdaadabcbecddebecdbceecabceaddacdccceedddeabcdbcbbdaacbcceeebbcbbacbbcdaebbcebdaebbbaaececdcddcaaadeccceabdbdeacdcddcdaaacaedbcdeecebeeeecceccbddbdacdceaddabccbaccabacdcbcadccaeaaaaaecdecddabeaddbbdbdeddadacebeaddbeaddcadccccababcedcaebedbadebeaacdbcbcbdaadeaecdddacdaaeedddbdaddbebccdceecaaddddaadcabdeccdaccaacbdcaeaccaabcbbadccdeceedaedbacdeaecdeeeabadaabebdadceddccdcabebddcaabdebccdeedaaaecdadbaeebecebaadcccabebcaecbdbabbdddcbecacbdacdacadbebbabdbbbddabbbbdcdedaddbdbabdbaebeebaadeeaccadeaeaedcaeacdcacbeabededbedabaeddedadbbeeaaaaadbdaedaadecebceccbbedddecabdbaebddeaeeecdcedeacddddbeedeeaacbdbceedaaebbbeabaeddacddbbbeeddabbbeeedeedadceaecbeadacaacbebddeaacbaadeceeecaeedaaaebbbecdbaaeceebcbbdcbdaddceceebcaaddcbbdbaadcbdadaddababdaaaebbaaabedacdbcaccecbeaceebbaedcccbdccebcaddbcaaedbadeadbccaedacbeecddcccebcdbcbaaaabcedbcdcecbdcbbebadaeeaeacdbaadecdcbceacbcdcaaaabcacaecbaeeaaacabeedaebceabeaaebdebccabaababbcbbeabacaeceaebcddcdbceeedcdcedbbcbeddabdddaceddcedecdeaddbeaacdeaeeedcbdeddedccabadecbdbeaeceadbaddbbdbebbabdaeacdaaeeceaadaeaceccecdadeabbddcceaceeeacdcdddddecaebccdabcbaebbdbdcdebebcabbdeddddaacadacbdeecdebcedeccebbbabdaddbecacaeceaaedbedcdacddaebccbdceacebccabaaeaaadceaeddcdecdbbaeaabdbeabbbbdbbeededdaeaabeeacdaecdabaebedbbabbdacaccbbdecebcebcaebbcbdadeaabecdcbddecdabaacbddbdbcbcdacccdadddcdadbeecabbcdddbcecdcdcadeceacdeeaebcedeeaceaaddcbeeaeeeeaeeceeaccbcbcaeadddaadcebbdbdccacebddeccdbebdbaadacbbcacdebebcdacacdcdedabceaedbcaedecebbdbdededbaeaaaeedbedbcddeeddddbcdaeeabbadabadaabdbcdbbdabbbebaeecbedbaeceaccdecbacbedceecbbbdcaceadacacebbbddbeeaacaaeabdecadceaacaeaaeeddeadbbcacdeebcaccdbbbeebdcdeacabcdcebeaeecacedbcbdcedcbbabadcebaabdacbeddcbacedabbcbebbeebaebaccbadcdbacdcaeadedceabdcecbebdaaceeabcaaabeddcceeddcaccbaebceeebbadcedacdcdbcbabeddebecadaaccbcacbadccdeaceecbccbbbccceaadcaaabbeecadaebadaabbdbeabdaeeecbececbcdecaaedacdbeacececdbacddadcbceeabbeeeaccabbcccdbdaedbbedeaeaddeddecccecabdacedeabdaebebedecaeaccadbdebdeacdadedebececcbdedcecbecacacbeadebdedcddeedddbcdbcaedbeecddaccabbaaaecbbdedaadbbdadaddaeeeaeabdaadcbaedebcdcacbbcdecaabaedceebabcdebdbeebaeecdcbabcaceadbdaaebcadeabdbeccececcbcbccddacaaaddedbbbdecacceddedcbcceceddebbbadeeaaadabeddaaccdbebdeabebcbbeabceededebcbceebbeebddbdecebeebcaebcabddeacaeeadccedbcebabddadedbeeadacdccaaecbedbbccaeadebdbaeccbcebddeeaadbbcccaedaeeeeadbeebbdbddccbbadbabccccedebbbbabcdabeebdcbccccbedceddeecbaedddacccedeabdbdbdeeadacddcebdddbcecbebeeaccdbcbeeaecaacbdabcceeaecdceacbeddecdeddecabaeaaeddcaecacbddbacbdeabdeaabdedccedeacddadaaaecabdeccedaaecaccdedcdbbceccbbabaacbcbbddecbcccbacbcddeaaadcadecbcaaeeeabaeecaebdacaabedceddacbeabdcacebbadedeadadbbeadceceeaebeeaeadddaacaadeaacdedcaccbaececaedaababdebeabebbbcdddbcebdcbcaebbbecacdbebdaadbbadeaeccaacbababaaaeebacedaeabcccdeacaaaadcbeebdececdaeabeeaedcbacbedcdcaabdadcdbeeceebcdcdeddcacacbaddedabcabaddabeedcdeddadaaeccbcabbcdabecdadccacabccedaadedcbdaeacacdeabcdccebeacdedeeaeeaaeddceceeceaaabdaabacbcbcbcdbcbeaaeaddaccbecdaabcbddbabeddbecedbeaeadeedbbdbbaecbbbbcbedcbbaabacdbceedaabdcecaacdeadbaeccddcdcbbccdbcbdeeecceddaddbcdeadceeeecaceabaddedcaaeebdacccdbdbbdaeadcacbecaeaeaaddadabbdebdeaccdbbbaddcceaeebabdceebdaacadaaacdebbeeadababdddedddabbbcbecccdbbacbbeebcadbcadebbeaabeebbbabbaeecbabbebeebcddebbecbceccabedaebdaebabceebdeebdcbdddddddeeadbebdacbddbaeadbedbceeedcaacaeeeaaadebbaeeeeaabadcbeacaceeacaecdcdeaacbbaceeedaadddebacbedcaebaeddacabaededebcdcecacaacaedbedcccaeddbacbadedbeaddbccabcddebeaecaadebbbdcbcaddeebdcceebecbaebcaeadbceedcbdbebadceaeeabbbdcaecaaecdcceeddceeeacbebcdeaabddcdcecdbdebabdbcaaecbceecdecbbdebdecbeaaeccebddbdcbbbebedecbbcaaeeddcbbebeededecbaebeadabbadedbaabddcedadaebddbcdadcaaedbddebbbdacddebbcbccdadbaaaebbbcebbdbbecaeadedbaeadbddcceedbbdaceedbdebdabccebbcdeedeecccabebbdedaedbbdbbaaabaceeeeeeddcebacbcaddcdceedabcbcddccbabdaccaaecedecccaecacedeeedabaadbadbdcbbbaaecaccabbcadabbaeabdeebeaabdedebceaacbbadddbacceabeeaceeddeedaaddaeeaeccbbeaeddbacbebdbbccdceeabcedabdebadbbccddadbbbcbcebaaeabcdeecbcdbcbcbeebbcdebeecdcdcceaeddebbcebeebddaadadbddacacacadcacdcabececacaecaaabdbbaadbbedcdcadbbddabbcccebceddceedaeadaaebcbcecedeadcccaeadaeacdcdaaacdcebebcdacbcaddcdceccbabdebababbeabacccdbaacabdacccdbbeecceaceceaeadbddacbceacebbaaaacbeedddeecbaebcabbcebaebaebbcdbedabaaeaacdedadcbacdccdeebcdabcadeababbeaebebacacdbedbcdadcedccdebbcbbeaaeceedcccdeccdbdaacbedbbcceeedbeebdadbbacadeeecdcdaecccbbdaedbdddacecedacbcedbceeacabcceecacadaadddbddbccedabcaeeeaebaecadcdaaedacceeaaaceabacecadeacadbbcecdbaabdcdaeccdabbdccccadebdceeebeeaaabddddaadecebceedecabdccabcbdeceaceceebbdbbeebbcaceeabddadeeeccaabeeebeddeeccdeceaceceacdedcedaacbddaaecaccbecaeabceaeadccbeeeeeeaedbbaeecaacecadccaeeacaaebcdccebdcaebbeaccbddaaabdbdcdbabccecebdcecbbbcbacbddbdddececcdddaccddacdaebaadbeaaaaebaaaedbcbccaddaecaaeccabbabcbedbeaecbccccbdcecdadabbcdddddeecadaacccbaebddeeeaabbcbccccbbbdebbabebcdacdcaaeccedabeeaaacbeacbebeccaabdbebebdebbadbeceeedcdcdbdecacabdebedccdeebadacccddabccceddcccedbedecaacbbbbddbdbbcdacbeaadcceccbbbaaccacbbadecdcddaaeedceddacbaaaedddbedebdbadccbebbdbcaadddbeaadcaaebdcaeadaacaaaaaabddcbbaddaebcebcbbacbeeadbaadeebdeaebbcecdaaaeacaabbaddabacdcceabecaaabbebeacbacadaeedcedaeebecaceecbabccedcdedbecdceabddacedddcbcbbbaebddeecbcecdcaddadadcadeedccdbbadeccecdedcbdcdebcdadadabbebdebecbbcbebdebdddaaedcabceaecdaadedddadacabaaaebdaeddbbdadabadadcaaadccddcdcedaadeeabaacdbdcdccadcaadceddedbcbaddcebebdbccacceddeaadccabadceceeabdaccecdeebadcbcccdddaceebbeadcbecbbdecbeeeebbacedbbadaceeadbbadeecaadedeaeaccbbbcccacadcbaeebdbbeddbacaecabcbdaebdcdbadeaacbcbebebebbdceaadeaedaabedebeeaaebcddcaebeeadbedeadcaedbcbbcddcbabdecdedbedbbaebaabbcbedbbbdeceecedecbacdaebcbaaaebedaaabaccaebbcbeaaeeaabbbeedbddcccaedecbacacceedbeeaeadccacebacdeabbdbebccaaeadecccbcebababdbbdaececeedacbdcaeaadbeceddedcecabedacedddedcabdbaebdccaaaadeadededbeeebabeddacdeedcedecdddbbebebeadcaeacbdecdedcbeebaccccdbaaddbdeceabcaaedeacbeaebccbeaaecdccaddeddaaeccbccbcbebeacbbddbedddbdceddcbbbbcbbbbdaabcbbdedadaceeebaaedbedebadbebbaecbcdddaacdeebdeceacaaabececaaceedadaaaedccecabdceedbbcbeceacebcedaddcbddccadabccddcabccccceacdddebbbcabeebaacddebdbcecabbbbcbbadecaecaecedacebecbeaeadbbdeeddbcbebbdcaebadccabcaebbaceadeeaecbdecebdcbdcbcaacbddcaacdecbdbebdbceabdaebeedecbccebabeeeddeeccdebccacbaaabddcdadabacdeeedaadcbdaabbeaaebcacbbcdaaedabdcedbacdabbddcadbddcedeebabdccaeaddabcdebbeaacedcebbcdcaaeebcbaccaacbdbacceecdaeebcdbadccadbeddbdedddacebabcecbeeeeedcdaaaecdbbecddeddedcdabaebbceabceeedbcacadddadceecbcdaccaddecacacccdddeacbebbdaeadcadeddbceddadcaeabaebaccbaeedbeccadbebacadbeecbbdaabdbdbdbbdcbaedeaeedebaaddecbeddbbacaeaecdaecaebcdbccccaeacbaaedbecacadedcbeeaddececdebdbbbabebaacdebdbeeebacddedbcdccbdcacadebaabcccccaeccdbdeededadadbdbedaccbcedeeceacbcddddaaeabdcdcebceabeceecaabcbdeebbbabccbdcbaaededbbbdccdcabcddeedbcbbbaaacaceccdadedbecbbacebecdacaebbecdabadbccbacaecdbabcaaccdcacabadbcdbaeedbcedbdbbcdaaabcdcceabeacedddbbbbeecdaddcebccabbdcdaebeeadaaecdcbcddbddaabdbbcbedbbaaadaddbbbeddaeccdeaadeacebbdecdadbccceeacedddaeaadbdcaaeacabdacbdeacbcaeeaeeaaaadebbcbaabebdecaebcbeabddcdddcdbeeedcadcbebeeeedcccdcccebceadcdbacdebedcbdbbcbeebcaaeecbdcccbedcdcabaeecabcdabceeaeaddeddcbddbdceeaddaceeeaddcbcedbaecbbdccaaabaadeecaebbbbcebbdaabacdea";
        int count = 0;
        for (int i = 0; i < s.length(); i++) {
            String s1 = s.substring(0, i+1);
            String s2 = s.substring(i + 1);
            Map<Character, Integer> s1Map = new HashMap<>();
            Map<Character, Integer> s2Map = new HashMap<>();

            for (char c : s1.toCharArray()) {
                s1Map.put(c, s1Map.getOrDefault(c, 0) + 1);
            }

            for (char c : s2.toCharArray()) {
                s2Map.put(c, s2Map.getOrDefault(c, 0) + 1);
            }

            if(s1Map.size() == s2Map.size()) count++;
/*
            Map<Integer, Integer> s1CountMap = new HashMap<>();
            Map<Integer, Integer> s2CountMap = new HashMap<>();

            s1Map.values().forEach(in -> s1CountMap.put(in, s1CountMap.getOrDefault(in, 0) + 1));
            s2Map.values().forEach(in -> s2CountMap.put(in, s2CountMap.getOrDefault(in, 0) + 1));
*/
           /* int c = 0;
            for (Integer j : s1CountMap.keySet()) {
                if (s1CountMap.get(j) != s2CountMap.get(j)) break;
                else c++;
            }
            if (c == s1CountMap.size() && s1CountMap.size() == s2CountMap.size()) count++;
*/
        }

        System.out.println(count);
    }
}
